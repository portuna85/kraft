plugins {
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
}

group = 'com.kraft.book'
version = '1.0.4-SNAPSHOT-' + new Date().format("yyyy-MM-dd-HHmmss")

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent {
        transitive = false
    }
    // 선택: Lombok 프로세서 상속
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time' // 버전 생략 OK

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // 권장

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Mockito 에이전트 (버전은 BOM이 맞춰줌)
    mockitoAgent 'org.mockito:mockito-core'

    // 선택: 개발 편의
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

// 공통 컴파일/테스트 옵션
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters'] // 선택
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'

    // Mockito 인라인 모커 에이전트를 명시적으로 로딩
    jvmArgs "-javaagent:${configurations.mockitoAgent.asPath}"
    jvmArgs "-Xshare:off"
}
