plugins {
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
}

group = 'com.kraft.book'
version = "1.0.4-SNAPSHOT-${new Date().format('yyyy-MM-dd-HHmmss')}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent { transitive = false }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ✅ Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // ✅ Java 8 시간 포맷용 (버전 명시 필수)
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'

    // 선택) 레이아웃 다이얼렉트 (템플릿 레이아웃 격자화가 필요하면)
    // implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    mockitoAgent 'org.mockito:mockito-core'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'
    jvmArgs "-javaagent:${configurations.mockitoAgent.asPath}"
    jvmArgs "-Xshare:off"
}
